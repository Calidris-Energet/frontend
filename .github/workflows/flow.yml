name: Deploy Frontend

on:
  push:
  pull_request:
    types: [opened]

env:
  TELEGRAM_GROUP_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
  TELEGRAM_TOPIC_ID: ${{ secrets.TELEGRAM_TOPIC_ID }}
  TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
  CONTAINER_NAME: "front"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  install-cache:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Commit
        uses: actions/checkout@master

      - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js
        uses: actions/setup-node@master
        with:
          node-version: 23

      - name: Cache npm dependencies
        uses: actions/cache@master
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          npm ci

      - name: Get Current Job Log URL
        uses: Tiryoh/gha-jobid-action@main
        if: failure()
        id: jobs
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          job_name: ${{ github.job }}

      - name: Send Telegram Error Message
        if: failure()
        uses: PacificPromise/macos-telegram-action@main
        with:
          type: topic
          message: |
            ‚ùó –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π ‚ùó
            
            üîπ Repo: ${{ github.repository }}
            üîπ Workflow: ${{ github.workflow }}
            üîπ Job: ${{ github.job }}
            
            üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –¥–∂–æ–±—É üîó
            ${{ steps.jobs.outputs.html_url }}
            
            üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–∞–π–ø–ª–∞–π–Ω üîó
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  lint:
    runs-on: ubuntu-latest
    needs: install-cache
    steps:
      - name: Checkout Commit
        uses: actions/checkout@master

      - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js
        uses: actions/setup-node@master
        with:
          node-version: 23

      - name: Restore npm dependencies
        uses: actions/cache@master
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: –ü—Ä–æ–≥–æ–Ω –ª–∏–Ω—Ç–µ—Ä–∞
        run: npm run lint

      - name: Get Current Job Log URL
        uses: Tiryoh/gha-jobid-action@main
        if: failure()
        id: jobs
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          job_name: ${{ github.job }}

      - name: Send Telegram Error Message
        if: failure()
        uses: PacificPromise/macos-telegram-action@main
        with:
          type: topic
          message: |
            ‚ùó –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –ø—Ä–æ–≥–æ–Ω–∞ –ª–∏–Ω—Ç–µ—Ä–∞ ‚ùó
            
            üîπ Repo: ${{ github.repository }}
            üîπ Workflow: ${{ github.workflow }}
            üîπ Job: ${{ github.job }}
            
            üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –¥–∂–æ–±—É üîó
            ${{ steps.jobs.outputs.html_url }}
            
            üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–∞–π–ø–ª–∞–π–Ω üîó
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  unit-test:
    runs-on: ubuntu-latest
    needs: install-cache

    permissions:
      # Required to checkout the code
      contents: read
      # Required to put a comment into the pull-request
      pull-requests: write

    steps:
      - name: Checkout Commit
        uses: actions/checkout@v2

      - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js
        uses: actions/setup-node@master
        with:
          node-version: 23

      - name: Restore npm dependencies
        uses: actions/cache@master
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: –ü—Ä–æ–≥–æ–Ω —Ç–µ—Å—Ç–æ–≤
        run: npx vitest --coverage.enabled true

      - name: 'Report Coverage'
        # Set if: always() to also generate the report if tests are failing
        # Only works if you set `reportOnFailure: true` in your vite config as specified above
        if: always()
        uses:  davelosert/vitest-coverage-report-action@v2

      - name: Get Current Job Log URL
        uses: Tiryoh/gha-jobid-action@main
        if: failure()
        id: jobs
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          job_name: ${{ github.job }}

      - name: Send Telegram Error Message
        if: failure()
        uses: PacificPromise/macos-telegram-action@main
        with:
          type: topic
          message: |
            ‚ùó –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –ø—Ä–æ–≥–æ–Ω–∞ —é–Ω–∏—Ç —Ç–µ—Å—Ç–æ–≤ ‚ùó
            
            üîπ Repo: ${{ github.repository }}
            üîπ Workflow: ${{ github.workflow }}
            üîπ Job: ${{ github.job }}
            
            üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –¥–∂–æ–±—É üîó
            ${{ steps.jobs.outputs.html_url }}
            
            üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–∞–π–ø–ª–∞–π–Ω üîó
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  build:
    runs-on: ubuntu-latest
    needs: unit-test

    steps:
      - name: Pull code
        uses: appleboy/ssh-action@master
        with:
          port: ${{ secrets.SERVER_PORT }}
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: | 
            cd /home/energet/frontend 
            sudo git fetch
            git checkout ${{ github.ref_name }}
            git pull

      - name: Build Docker container
        uses: appleboy/ssh-action@master
        with:
          timeout: 10m
          port: ${{ secrets.SERVER_PORT }}
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          envs: CONTAINER_NAME
          script: |
            cd /home/energet/frontend/
            sudo docker container stop $CONTAINER_NAME
            sudo docker build -t $CONTAINER_NAME .
            sudo docker run --rm -d --network host --volume /etc/letsencrypt/live/energet.shop:/energet.shop $CONTAINER_NAME

  notify-success:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Send Telegram Success Message
        uses: PacificPromise/macos-telegram-action@main
        with:
          type: topic
          message: |
            üîî Frontend
            ‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–¥–µ–ø–ª–æ–µ–Ω—ã

            üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ–¥ üîó
            ${{ secrets.PRODUCTION_URL || '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç' }}
